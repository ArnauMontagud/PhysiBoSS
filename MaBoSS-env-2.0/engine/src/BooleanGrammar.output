Grammaire

    0 $accept: translation_unit $end

    1 translation_unit: node_decl
    2                 | translation_unit node_decl

    3 node_decl: NODE IDENTIFIER '{' node_decl_item_list '}'
    4          | NODE IDENTIFIER '{' '}'
    5          | IDENTIFIER colon_comma expression term_opt

    6 colon_comma: ':'
    7            | ','

    8 node_decl_item_list: node_decl_item
    9                    | node_decl_item_list node_decl_item

   10 node_decl_item: IDENTIFIER '=' expression ';'
   11               | IDENTIFIER '=' STRING ';'

   12 primary_expression: IDENTIFIER
   13                   | '@' IDENTIFIER
   14                   | VARIABLE
   15                   | INTEGER
   16                   | DOUBLE
   17                   | '(' expression ')'

   18 postfix_expression: primary_expression
   19                   | IDENTIFIER '(' argument_expression_list ')'
   20                   | IDENTIFIER '(' ')'

   21 argument_expression_list: conditional_expression
   22                         | argument_expression_list ',' conditional_expression

   23 unary_expression: postfix_expression
   24                 | '+' unary_expression
   25                 | '-' unary_expression
   26                 | '!' unary_expression
   27                 | LOGNOT unary_expression

   28 multiplicative_expression: unary_expression
   29                          | multiplicative_expression '*' unary_expression
   30                          | multiplicative_expression '/' unary_expression

   31 additive_expression: multiplicative_expression
   32                    | additive_expression '+' multiplicative_expression
   33                    | additive_expression '-' multiplicative_expression

   34 relational_expression: additive_expression
   35                      | relational_expression '<' additive_expression
   36                      | relational_expression '>' additive_expression
   37                      | relational_expression LTEQ additive_expression
   38                      | relational_expression GTEQ additive_expression

   39 equality_expression: relational_expression
   40                    | equality_expression EQUAL relational_expression
   41                    | equality_expression NOT_EQUAL relational_expression

   42 logical_and_expression: equality_expression
   43                       | logical_and_expression LOGAND equality_expression

   44 logical_or_expression: logical_and_expression
   45                      | logical_or_expression LOGOR logical_and_expression

   46 logical_xor_expression: logical_or_expression
   47                       | logical_xor_expression LOGXOR logical_or_expression
   48                       | logical_xor_expression '^' logical_or_expression

   49 conditional_expression: logical_xor_expression
   50                       | logical_xor_expression '?' expression ':' conditional_expression

   51 expression: conditional_expression

   52 term_opt: %empty
   53         | ';'


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'!' (33) 26
'(' (40) 17 19 20
')' (41) 17 19 20
'*' (42) 29
'+' (43) 24 32
',' (44) 7 22
'-' (45) 25 33
'/' (47) 30
':' (58) 6 50
';' (59) 10 11 53
'<' (60) 35
'=' (61) 10 11
'>' (62) 36
'?' (63) 50
'@' (64) 13
'^' (94) 48
'{' (123) 3 4
'}' (125) 3 4
error (256)
IDENTIFIER (258) 3 4 5 10 11 12 13 19 20
VARIABLE (259) 14
STRING (260) 11
DOUBLE (261) 16
INTEGER (262) 15
LOGAND (263) 43
LOGOR (264) 45
LOGXOR (265) 47
LOGNOT (266) 27
EQUAL (267) 40
NOT_EQUAL (268) 41
NODE (269) 3 4
GTEQ (270) 38
LTEQ (271) 37


Non-terminaux, suivis des règles où ils apparaissent

$accept (35)
    à gauche: 0
translation_unit (36)
    à gauche: 1 2, à droite: 0 2
node_decl (37)
    à gauche: 3 4 5, à droite: 1 2
colon_comma (38)
    à gauche: 6 7, à droite: 5
node_decl_item_list (39)
    à gauche: 8 9, à droite: 3 9
node_decl_item (40)
    à gauche: 10 11, à droite: 8 9
primary_expression (41)
    à gauche: 12 13 14 15 16 17, à droite: 18
postfix_expression (42)
    à gauche: 18 19 20, à droite: 23
argument_expression_list (43)
    à gauche: 21 22, à droite: 19 22
unary_expression (44)
    à gauche: 23 24 25 26 27, à droite: 24 25 26 27 28 29 30
multiplicative_expression (45)
    à gauche: 28 29 30, à droite: 29 30 31 32 33
additive_expression (46)
    à gauche: 31 32 33, à droite: 32 33 34 35 36 37 38
relational_expression (47)
    à gauche: 34 35 36 37 38, à droite: 35 36 37 38 39 40 41
equality_expression (48)
    à gauche: 39 40 41, à droite: 40 41 42 43
logical_and_expression (49)
    à gauche: 42 43, à droite: 43 44 45
logical_or_expression (50)
    à gauche: 44 45, à droite: 45 46 47 48
logical_xor_expression (51)
    à gauche: 46 47 48, à droite: 47 48 49 50
conditional_expression (52)
    à gauche: 49 50, à droite: 21 22 50 51
expression (53)
    à gauche: 51, à droite: 5 10 17 50
term_opt (54)
    à gauche: 52 53, à droite: 5


État 0

    0 $accept: . translation_unit $end

    IDENTIFIER  décalage et aller à l'état 1
    NODE        décalage et aller à l'état 2

    translation_unit  aller à l'état 3
    node_decl         aller à l'état 4


État 1

    5 node_decl: IDENTIFIER . colon_comma expression term_opt

    ':'  décalage et aller à l'état 5
    ','  décalage et aller à l'état 6

    colon_comma  aller à l'état 7


État 2

    3 node_decl: NODE . IDENTIFIER '{' node_decl_item_list '}'
    4          | NODE . IDENTIFIER '{' '}'

    IDENTIFIER  décalage et aller à l'état 8


État 3

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . node_decl

    $end        décalage et aller à l'état 9
    IDENTIFIER  décalage et aller à l'état 1
    NODE        décalage et aller à l'état 2

    node_decl  aller à l'état 10


État 4

    1 translation_unit: node_decl .

    $défaut  réduction par utilisation de la règle 1 (translation_unit)


État 5

    6 colon_comma: ':' .

    $défaut  réduction par utilisation de la règle 6 (colon_comma)


État 6

    7 colon_comma: ',' .

    $défaut  réduction par utilisation de la règle 7 (colon_comma)


État 7

    5 node_decl: IDENTIFIER colon_comma . expression term_opt

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 26
    equality_expression        aller à l'état 27
    logical_and_expression     aller à l'état 28
    logical_or_expression      aller à l'état 29
    logical_xor_expression     aller à l'état 30
    conditional_expression     aller à l'état 31
    expression                 aller à l'état 32


État 8

    3 node_decl: NODE IDENTIFIER . '{' node_decl_item_list '}'
    4          | NODE IDENTIFIER . '{' '}'

    '{'  décalage et aller à l'état 33


État 9

    0 $accept: translation_unit $end .

    $défaut  accepter


État 10

    2 translation_unit: translation_unit node_decl .

    $défaut  réduction par utilisation de la règle 2 (translation_unit)


État 11

   12 primary_expression: IDENTIFIER .
   19 postfix_expression: IDENTIFIER . '(' argument_expression_list ')'
   20                   | IDENTIFIER . '(' ')'

    '('  décalage et aller à l'état 34

    $défaut  réduction par utilisation de la règle 12 (primary_expression)


État 12

   14 primary_expression: VARIABLE .

    $défaut  réduction par utilisation de la règle 14 (primary_expression)


État 13

   16 primary_expression: DOUBLE .

    $défaut  réduction par utilisation de la règle 16 (primary_expression)


État 14

   15 primary_expression: INTEGER .

    $défaut  réduction par utilisation de la règle 15 (primary_expression)


État 15

   27 unary_expression: LOGNOT . unary_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression  aller à l'état 21
    postfix_expression  aller à l'état 22
    unary_expression    aller à l'état 35


État 16

   13 primary_expression: '@' . IDENTIFIER

    IDENTIFIER  décalage et aller à l'état 36


État 17

   17 primary_expression: '(' . expression ')'

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 26
    equality_expression        aller à l'état 27
    logical_and_expression     aller à l'état 28
    logical_or_expression      aller à l'état 29
    logical_xor_expression     aller à l'état 30
    conditional_expression     aller à l'état 31
    expression                 aller à l'état 37


État 18

   24 unary_expression: '+' . unary_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression  aller à l'état 21
    postfix_expression  aller à l'état 22
    unary_expression    aller à l'état 38


État 19

   25 unary_expression: '-' . unary_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression  aller à l'état 21
    postfix_expression  aller à l'état 22
    unary_expression    aller à l'état 39


État 20

   26 unary_expression: '!' . unary_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression  aller à l'état 21
    postfix_expression  aller à l'état 22
    unary_expression    aller à l'état 40


État 21

   18 postfix_expression: primary_expression .

    $défaut  réduction par utilisation de la règle 18 (postfix_expression)


État 22

   23 unary_expression: postfix_expression .

    $défaut  réduction par utilisation de la règle 23 (unary_expression)


État 23

   28 multiplicative_expression: unary_expression .

    $défaut  réduction par utilisation de la règle 28 (multiplicative_expression)


État 24

   29 multiplicative_expression: multiplicative_expression . '*' unary_expression
   30                          | multiplicative_expression . '/' unary_expression
   31 additive_expression: multiplicative_expression .

    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 31 (additive_expression)


État 25

   32 additive_expression: additive_expression . '+' multiplicative_expression
   33                    | additive_expression . '-' multiplicative_expression
   34 relational_expression: additive_expression .

    '+'  décalage et aller à l'état 43
    '-'  décalage et aller à l'état 44

    $défaut  réduction par utilisation de la règle 34 (relational_expression)


État 26

   35 relational_expression: relational_expression . '<' additive_expression
   36                      | relational_expression . '>' additive_expression
   37                      | relational_expression . LTEQ additive_expression
   38                      | relational_expression . GTEQ additive_expression
   39 equality_expression: relational_expression .

    GTEQ  décalage et aller à l'état 45
    LTEQ  décalage et aller à l'état 46
    '<'   décalage et aller à l'état 47
    '>'   décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 39 (equality_expression)


État 27

   40 equality_expression: equality_expression . EQUAL relational_expression
   41                    | equality_expression . NOT_EQUAL relational_expression
   42 logical_and_expression: equality_expression .

    EQUAL      décalage et aller à l'état 49
    NOT_EQUAL  décalage et aller à l'état 50

    $défaut  réduction par utilisation de la règle 42 (logical_and_expression)


État 28

   43 logical_and_expression: logical_and_expression . LOGAND equality_expression
   44 logical_or_expression: logical_and_expression .

    LOGAND  décalage et aller à l'état 51

    $défaut  réduction par utilisation de la règle 44 (logical_or_expression)


État 29

   45 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   46 logical_xor_expression: logical_or_expression .

    LOGOR  décalage et aller à l'état 52

    $défaut  réduction par utilisation de la règle 46 (logical_xor_expression)


État 30

   47 logical_xor_expression: logical_xor_expression . LOGXOR logical_or_expression
   48                       | logical_xor_expression . '^' logical_or_expression
   49 conditional_expression: logical_xor_expression .
   50                       | logical_xor_expression . '?' expression ':' conditional_expression

    LOGXOR  décalage et aller à l'état 53
    '^'     décalage et aller à l'état 54
    '?'     décalage et aller à l'état 55

    $défaut  réduction par utilisation de la règle 49 (conditional_expression)


État 31

   51 expression: conditional_expression .

    $défaut  réduction par utilisation de la règle 51 (expression)


État 32

    5 node_decl: IDENTIFIER colon_comma expression . term_opt

    ';'  décalage et aller à l'état 56

    $défaut  réduction par utilisation de la règle 52 (term_opt)

    term_opt  aller à l'état 57


État 33

    3 node_decl: NODE IDENTIFIER '{' . node_decl_item_list '}'
    4          | NODE IDENTIFIER '{' . '}'

    IDENTIFIER  décalage et aller à l'état 58
    '}'         décalage et aller à l'état 59

    node_decl_item_list  aller à l'état 60
    node_decl_item       aller à l'état 61


État 34

   19 postfix_expression: IDENTIFIER '(' . argument_expression_list ')'
   20                   | IDENTIFIER '(' . ')'

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    ')'         décalage et aller à l'état 62
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    argument_expression_list   aller à l'état 63
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 26
    equality_expression        aller à l'état 27
    logical_and_expression     aller à l'état 28
    logical_or_expression      aller à l'état 29
    logical_xor_expression     aller à l'état 30
    conditional_expression     aller à l'état 64


État 35

   27 unary_expression: LOGNOT unary_expression .

    $défaut  réduction par utilisation de la règle 27 (unary_expression)


État 36

   13 primary_expression: '@' IDENTIFIER .

    $défaut  réduction par utilisation de la règle 13 (primary_expression)


État 37

   17 primary_expression: '(' expression . ')'

    ')'  décalage et aller à l'état 65


État 38

   24 unary_expression: '+' unary_expression .

    $défaut  réduction par utilisation de la règle 24 (unary_expression)


État 39

   25 unary_expression: '-' unary_expression .

    $défaut  réduction par utilisation de la règle 25 (unary_expression)


État 40

   26 unary_expression: '!' unary_expression .

    $défaut  réduction par utilisation de la règle 26 (unary_expression)


État 41

   29 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression  aller à l'état 21
    postfix_expression  aller à l'état 22
    unary_expression    aller à l'état 66


État 42

   30 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression  aller à l'état 21
    postfix_expression  aller à l'état 22
    unary_expression    aller à l'état 67


État 43

   32 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 68


État 44

   33 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 69


État 45

   38 relational_expression: relational_expression GTEQ . additive_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 70


État 46

   37 relational_expression: relational_expression LTEQ . additive_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 71


État 47

   35 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 72


État 48

   36 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 73


État 49

   40 equality_expression: equality_expression EQUAL . relational_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 74


État 50

   41 equality_expression: equality_expression NOT_EQUAL . relational_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 75


État 51

   43 logical_and_expression: logical_and_expression LOGAND . equality_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 26
    equality_expression        aller à l'état 76


État 52

   45 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 26
    equality_expression        aller à l'état 27
    logical_and_expression     aller à l'état 77


État 53

   47 logical_xor_expression: logical_xor_expression LOGXOR . logical_or_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 26
    equality_expression        aller à l'état 27
    logical_and_expression     aller à l'état 28
    logical_or_expression      aller à l'état 78


État 54

   48 logical_xor_expression: logical_xor_expression '^' . logical_or_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 26
    equality_expression        aller à l'état 27
    logical_and_expression     aller à l'état 28
    logical_or_expression      aller à l'état 79


État 55

   50 conditional_expression: logical_xor_expression '?' . expression ':' conditional_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 26
    equality_expression        aller à l'état 27
    logical_and_expression     aller à l'état 28
    logical_or_expression      aller à l'état 29
    logical_xor_expression     aller à l'état 30
    conditional_expression     aller à l'état 31
    expression                 aller à l'état 80


État 56

   53 term_opt: ';' .

    $défaut  réduction par utilisation de la règle 53 (term_opt)


État 57

    5 node_decl: IDENTIFIER colon_comma expression term_opt .

    $défaut  réduction par utilisation de la règle 5 (node_decl)


État 58

   10 node_decl_item: IDENTIFIER . '=' expression ';'
   11               | IDENTIFIER . '=' STRING ';'

    '='  décalage et aller à l'état 81


État 59

    4 node_decl: NODE IDENTIFIER '{' '}' .

    $défaut  réduction par utilisation de la règle 4 (node_decl)


État 60

    3 node_decl: NODE IDENTIFIER '{' node_decl_item_list . '}'
    9 node_decl_item_list: node_decl_item_list . node_decl_item

    IDENTIFIER  décalage et aller à l'état 58
    '}'         décalage et aller à l'état 82

    node_decl_item  aller à l'état 83


État 61

    8 node_decl_item_list: node_decl_item .

    $défaut  réduction par utilisation de la règle 8 (node_decl_item_list)


État 62

   20 postfix_expression: IDENTIFIER '(' ')' .

    $défaut  réduction par utilisation de la règle 20 (postfix_expression)


État 63

   19 postfix_expression: IDENTIFIER '(' argument_expression_list . ')'
   22 argument_expression_list: argument_expression_list . ',' conditional_expression

    ','  décalage et aller à l'état 84
    ')'  décalage et aller à l'état 85


État 64

   21 argument_expression_list: conditional_expression .

    $défaut  réduction par utilisation de la règle 21 (argument_expression_list)


État 65

   17 primary_expression: '(' expression ')' .

    $défaut  réduction par utilisation de la règle 17 (primary_expression)


État 66

   29 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $défaut  réduction par utilisation de la règle 29 (multiplicative_expression)


État 67

   30 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $défaut  réduction par utilisation de la règle 30 (multiplicative_expression)


État 68

   29 multiplicative_expression: multiplicative_expression . '*' unary_expression
   30                          | multiplicative_expression . '/' unary_expression
   32 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 32 (additive_expression)


État 69

   29 multiplicative_expression: multiplicative_expression . '*' unary_expression
   30                          | multiplicative_expression . '/' unary_expression
   33 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  décalage et aller à l'état 41
    '/'  décalage et aller à l'état 42

    $défaut  réduction par utilisation de la règle 33 (additive_expression)


État 70

   32 additive_expression: additive_expression . '+' multiplicative_expression
   33                    | additive_expression . '-' multiplicative_expression
   38 relational_expression: relational_expression GTEQ additive_expression .

    '+'  décalage et aller à l'état 43
    '-'  décalage et aller à l'état 44

    $défaut  réduction par utilisation de la règle 38 (relational_expression)


État 71

   32 additive_expression: additive_expression . '+' multiplicative_expression
   33                    | additive_expression . '-' multiplicative_expression
   37 relational_expression: relational_expression LTEQ additive_expression .

    '+'  décalage et aller à l'état 43
    '-'  décalage et aller à l'état 44

    $défaut  réduction par utilisation de la règle 37 (relational_expression)


État 72

   32 additive_expression: additive_expression . '+' multiplicative_expression
   33                    | additive_expression . '-' multiplicative_expression
   35 relational_expression: relational_expression '<' additive_expression .

    '+'  décalage et aller à l'état 43
    '-'  décalage et aller à l'état 44

    $défaut  réduction par utilisation de la règle 35 (relational_expression)


État 73

   32 additive_expression: additive_expression . '+' multiplicative_expression
   33                    | additive_expression . '-' multiplicative_expression
   36 relational_expression: relational_expression '>' additive_expression .

    '+'  décalage et aller à l'état 43
    '-'  décalage et aller à l'état 44

    $défaut  réduction par utilisation de la règle 36 (relational_expression)


État 74

   35 relational_expression: relational_expression . '<' additive_expression
   36                      | relational_expression . '>' additive_expression
   37                      | relational_expression . LTEQ additive_expression
   38                      | relational_expression . GTEQ additive_expression
   40 equality_expression: equality_expression EQUAL relational_expression .

    GTEQ  décalage et aller à l'état 45
    LTEQ  décalage et aller à l'état 46
    '<'   décalage et aller à l'état 47
    '>'   décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 40 (equality_expression)


État 75

   35 relational_expression: relational_expression . '<' additive_expression
   36                      | relational_expression . '>' additive_expression
   37                      | relational_expression . LTEQ additive_expression
   38                      | relational_expression . GTEQ additive_expression
   41 equality_expression: equality_expression NOT_EQUAL relational_expression .

    GTEQ  décalage et aller à l'état 45
    LTEQ  décalage et aller à l'état 46
    '<'   décalage et aller à l'état 47
    '>'   décalage et aller à l'état 48

    $défaut  réduction par utilisation de la règle 41 (equality_expression)


État 76

   40 equality_expression: equality_expression . EQUAL relational_expression
   41                    | equality_expression . NOT_EQUAL relational_expression
   43 logical_and_expression: logical_and_expression LOGAND equality_expression .

    EQUAL      décalage et aller à l'état 49
    NOT_EQUAL  décalage et aller à l'état 50

    $défaut  réduction par utilisation de la règle 43 (logical_and_expression)


État 77

   43 logical_and_expression: logical_and_expression . LOGAND equality_expression
   45 logical_or_expression: logical_or_expression LOGOR logical_and_expression .

    LOGAND  décalage et aller à l'état 51

    $défaut  réduction par utilisation de la règle 45 (logical_or_expression)


État 78

   45 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   47 logical_xor_expression: logical_xor_expression LOGXOR logical_or_expression .

    LOGOR  décalage et aller à l'état 52

    $défaut  réduction par utilisation de la règle 47 (logical_xor_expression)


État 79

   45 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   48 logical_xor_expression: logical_xor_expression '^' logical_or_expression .

    LOGOR  décalage et aller à l'état 52

    $défaut  réduction par utilisation de la règle 48 (logical_xor_expression)


État 80

   50 conditional_expression: logical_xor_expression '?' expression . ':' conditional_expression

    ':'  décalage et aller à l'état 86


État 81

   10 node_decl_item: IDENTIFIER '=' . expression ';'
   11               | IDENTIFIER '=' . STRING ';'

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    STRING      décalage et aller à l'état 87
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 26
    equality_expression        aller à l'état 27
    logical_and_expression     aller à l'état 28
    logical_or_expression      aller à l'état 29
    logical_xor_expression     aller à l'état 30
    conditional_expression     aller à l'état 31
    expression                 aller à l'état 88


État 82

    3 node_decl: NODE IDENTIFIER '{' node_decl_item_list '}' .

    $défaut  réduction par utilisation de la règle 3 (node_decl)


État 83

    9 node_decl_item_list: node_decl_item_list node_decl_item .

    $défaut  réduction par utilisation de la règle 9 (node_decl_item_list)


État 84

   22 argument_expression_list: argument_expression_list ',' . conditional_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 26
    equality_expression        aller à l'état 27
    logical_and_expression     aller à l'état 28
    logical_or_expression      aller à l'état 29
    logical_xor_expression     aller à l'état 30
    conditional_expression     aller à l'état 89


État 85

   19 postfix_expression: IDENTIFIER '(' argument_expression_list ')' .

    $défaut  réduction par utilisation de la règle 19 (postfix_expression)


État 86

   50 conditional_expression: logical_xor_expression '?' expression ':' . conditional_expression

    IDENTIFIER  décalage et aller à l'état 11
    VARIABLE    décalage et aller à l'état 12
    DOUBLE      décalage et aller à l'état 13
    INTEGER     décalage et aller à l'état 14
    LOGNOT      décalage et aller à l'état 15
    '@'         décalage et aller à l'état 16
    '('         décalage et aller à l'état 17
    '+'         décalage et aller à l'état 18
    '-'         décalage et aller à l'état 19
    '!'         décalage et aller à l'état 20

    primary_expression         aller à l'état 21
    postfix_expression         aller à l'état 22
    unary_expression           aller à l'état 23
    multiplicative_expression  aller à l'état 24
    additive_expression        aller à l'état 25
    relational_expression      aller à l'état 26
    equality_expression        aller à l'état 27
    logical_and_expression     aller à l'état 28
    logical_or_expression      aller à l'état 29
    logical_xor_expression     aller à l'état 30
    conditional_expression     aller à l'état 90


État 87

   11 node_decl_item: IDENTIFIER '=' STRING . ';'

    ';'  décalage et aller à l'état 91


État 88

   10 node_decl_item: IDENTIFIER '=' expression . ';'

    ';'  décalage et aller à l'état 92


État 89

   22 argument_expression_list: argument_expression_list ',' conditional_expression .

    $défaut  réduction par utilisation de la règle 22 (argument_expression_list)


État 90

   50 conditional_expression: logical_xor_expression '?' expression ':' conditional_expression .

    $défaut  réduction par utilisation de la règle 50 (conditional_expression)


État 91

   11 node_decl_item: IDENTIFIER '=' STRING ';' .

    $défaut  réduction par utilisation de la règle 11 (node_decl_item)


État 92

   10 node_decl_item: IDENTIFIER '=' expression ';' .

    $défaut  réduction par utilisation de la règle 10 (node_decl_item)
