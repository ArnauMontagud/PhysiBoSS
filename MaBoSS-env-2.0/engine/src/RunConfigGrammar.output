Terminaux inutilisés dans la grammaire

   NODE


Grammaire

    0 $accept: translation_unit $end

    1 translation_unit: decl
    2                 | translation_unit decl

    3 decl: var_decl
    4     | runconfig_decl
    5     | node_attr_decl
    6     | ';'

    7 runconfig_decl: SYMBOL '=' expression ';'

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression ';'
    9               | symbol_istate_list '.' SYMBOL '=' istate_expression_list ';'

   10 symbol_istate_list: '[' symbol_list ']'

   11 symbol_list: SYMBOL
   12            | symbol_list ',' SYMBOL

   13 istate_expression_list: istate_expression
   14                       | istate_expression_list ',' istate_expression

   15 istate_expression: primary_expression '[' expression_list ']'

   16 expression_list: primary_expression
   17                | expression_list ',' primary_expression

   18 var_decl: VARIABLE '=' expression ';'

   19 primary_expression: INTEGER
   20                   | DOUBLE
   21                   | VARIABLE
   22                   | '(' expression ')'

   23 postfix_expression: primary_expression

   24 unary_expression: postfix_expression
   25                 | '+' unary_expression
   26                 | '-' unary_expression
   27                 | '!' unary_expression
   28                 | LOGNOT unary_expression

   29 multiplicative_expression: unary_expression
   30                          | multiplicative_expression '*' unary_expression
   31                          | multiplicative_expression '/' unary_expression

   32 additive_expression: multiplicative_expression
   33                    | additive_expression '+' multiplicative_expression
   34                    | additive_expression '-' multiplicative_expression

   35 relational_expression: additive_expression
   36                      | relational_expression '<' additive_expression
   37                      | relational_expression '>' additive_expression
   38                      | relational_expression LTEQ additive_expression
   39                      | relational_expression GTEQ additive_expression

   40 equality_expression: relational_expression
   41                    | equality_expression EQUAL relational_expression
   42                    | equality_expression NOT_EQUAL relational_expression

   43 logical_and_expression: equality_expression
   44                       | logical_and_expression LOGAND equality_expression

   45 logical_or_expression: logical_and_expression
   46                      | logical_or_expression LOGOR logical_and_expression

   47 logical_xor_expression: logical_or_expression
   48                       | logical_xor_expression LOGXOR logical_or_expression
   49                       | logical_xor_expression '^' logical_or_expression

   50 conditional_expression: logical_xor_expression
   51                       | logical_xor_expression '?' expression ':' conditional_expression

   52 expression: conditional_expression


Terminaux, suivis des règles où ils apparaissent

$end (0) 0
'!' (33) 27
'(' (40) 22
')' (41) 22
'*' (42) 30
'+' (43) 25 33
',' (44) 12 14 17
'-' (45) 26 34
'.' (46) 8 9
'/' (47) 31
':' (58) 51
';' (59) 6 7 8 9 18
'<' (60) 36
'=' (61) 7 8 9 18
'>' (62) 37
'?' (63) 51
'[' (91) 10 15
']' (93) 10 15
'^' (94) 49
error (256)
VARIABLE (258) 18 21
SYMBOL (259) 7 8 9 11 12
DOUBLE (260) 20
INTEGER (261) 19
LOGAND (262) 44
LOGOR (263) 46
LOGXOR (264) 48
LOGNOT (265) 28
EQUAL (266) 41
NOT_EQUAL (267) 42
NODE (268)
GTEQ (269) 39
LTEQ (270) 38


Non-terminaux, suivis des règles où ils apparaissent

$accept (34)
    à gauche: 0
translation_unit (35)
    à gauche: 1 2, à droite: 0 2
decl (36)
    à gauche: 3 4 5 6, à droite: 1 2
runconfig_decl (37)
    à gauche: 7, à droite: 4
node_attr_decl (38)
    à gauche: 8 9, à droite: 5
symbol_istate_list (39)
    à gauche: 10, à droite: 9
symbol_list (40)
    à gauche: 11 12, à droite: 10 12
istate_expression_list (41)
    à gauche: 13 14, à droite: 9 14
istate_expression (42)
    à gauche: 15, à droite: 13 14
expression_list (43)
    à gauche: 16 17, à droite: 15 17
var_decl (44)
    à gauche: 18, à droite: 3
primary_expression (45)
    à gauche: 19 20 21 22, à droite: 15 16 17 23
postfix_expression (46)
    à gauche: 23, à droite: 24
unary_expression (47)
    à gauche: 24 25 26 27 28, à droite: 25 26 27 28 29 30 31
multiplicative_expression (48)
    à gauche: 29 30 31, à droite: 30 31 32 33 34
additive_expression (49)
    à gauche: 32 33 34, à droite: 33 34 35 36 37 38 39
relational_expression (50)
    à gauche: 35 36 37 38 39, à droite: 36 37 38 39 40 41 42
equality_expression (51)
    à gauche: 40 41 42, à droite: 41 42 43 44
logical_and_expression (52)
    à gauche: 43 44, à droite: 44 45 46
logical_or_expression (53)
    à gauche: 45 46, à droite: 46 47 48 49
logical_xor_expression (54)
    à gauche: 47 48 49, à droite: 48 49 50 51
conditional_expression (55)
    à gauche: 50 51, à droite: 51 52
expression (56)
    à gauche: 52, à droite: 7 8 18 22 51


État 0

    0 $accept: . translation_unit $end

    VARIABLE  décalage et aller à l'état 1
    SYMBOL    décalage et aller à l'état 2
    ';'       décalage et aller à l'état 3
    '['       décalage et aller à l'état 4

    translation_unit    aller à l'état 5
    decl                aller à l'état 6
    runconfig_decl      aller à l'état 7
    node_attr_decl      aller à l'état 8
    symbol_istate_list  aller à l'état 9
    var_decl            aller à l'état 10


État 1

   18 var_decl: VARIABLE . '=' expression ';'

    '='  décalage et aller à l'état 11


État 2

    7 runconfig_decl: SYMBOL . '=' expression ';'
    8 node_attr_decl: SYMBOL . '.' SYMBOL '=' expression ';'

    '='  décalage et aller à l'état 12
    '.'  décalage et aller à l'état 13


État 3

    6 decl: ';' .

    $défaut  réduction par utilisation de la règle 6 (decl)


État 4

   10 symbol_istate_list: '[' . symbol_list ']'

    SYMBOL  décalage et aller à l'état 14

    symbol_list  aller à l'état 15


État 5

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . decl

    $end      décalage et aller à l'état 16
    VARIABLE  décalage et aller à l'état 1
    SYMBOL    décalage et aller à l'état 2
    ';'       décalage et aller à l'état 3
    '['       décalage et aller à l'état 4

    decl                aller à l'état 17
    runconfig_decl      aller à l'état 7
    node_attr_decl      aller à l'état 8
    symbol_istate_list  aller à l'état 9
    var_decl            aller à l'état 10


État 6

    1 translation_unit: decl .

    $défaut  réduction par utilisation de la règle 1 (translation_unit)


État 7

    4 decl: runconfig_decl .

    $défaut  réduction par utilisation de la règle 4 (decl)


État 8

    5 decl: node_attr_decl .

    $défaut  réduction par utilisation de la règle 5 (decl)


État 9

    9 node_attr_decl: symbol_istate_list . '.' SYMBOL '=' istate_expression_list ';'

    '.'  décalage et aller à l'état 18


État 10

    3 decl: var_decl .

    $défaut  réduction par utilisation de la règle 3 (decl)


État 11

   18 var_decl: VARIABLE '=' . expression ';'

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 32
    equality_expression        aller à l'état 33
    logical_and_expression     aller à l'état 34
    logical_or_expression      aller à l'état 35
    logical_xor_expression     aller à l'état 36
    conditional_expression     aller à l'état 37
    expression                 aller à l'état 38


État 12

    7 runconfig_decl: SYMBOL '=' . expression ';'

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 32
    equality_expression        aller à l'état 33
    logical_and_expression     aller à l'état 34
    logical_or_expression      aller à l'état 35
    logical_xor_expression     aller à l'état 36
    conditional_expression     aller à l'état 37
    expression                 aller à l'état 39


État 13

    8 node_attr_decl: SYMBOL '.' . SYMBOL '=' expression ';'

    SYMBOL  décalage et aller à l'état 40


État 14

   11 symbol_list: SYMBOL .

    $défaut  réduction par utilisation de la règle 11 (symbol_list)


État 15

   10 symbol_istate_list: '[' symbol_list . ']'
   12 symbol_list: symbol_list . ',' SYMBOL

    ']'  décalage et aller à l'état 41
    ','  décalage et aller à l'état 42


État 16

    0 $accept: translation_unit $end .

    $défaut  accepter


État 17

    2 translation_unit: translation_unit decl .

    $défaut  réduction par utilisation de la règle 2 (translation_unit)


État 18

    9 node_attr_decl: symbol_istate_list '.' . SYMBOL '=' istate_expression_list ';'

    SYMBOL  décalage et aller à l'état 43


État 19

   21 primary_expression: VARIABLE .

    $défaut  réduction par utilisation de la règle 21 (primary_expression)


État 20

   20 primary_expression: DOUBLE .

    $défaut  réduction par utilisation de la règle 20 (primary_expression)


État 21

   19 primary_expression: INTEGER .

    $défaut  réduction par utilisation de la règle 19 (primary_expression)


État 22

   28 unary_expression: LOGNOT . unary_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression  aller à l'état 27
    postfix_expression  aller à l'état 28
    unary_expression    aller à l'état 44


État 23

   22 primary_expression: '(' . expression ')'

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 32
    equality_expression        aller à l'état 33
    logical_and_expression     aller à l'état 34
    logical_or_expression      aller à l'état 35
    logical_xor_expression     aller à l'état 36
    conditional_expression     aller à l'état 37
    expression                 aller à l'état 45


État 24

   25 unary_expression: '+' . unary_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression  aller à l'état 27
    postfix_expression  aller à l'état 28
    unary_expression    aller à l'état 46


État 25

   26 unary_expression: '-' . unary_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression  aller à l'état 27
    postfix_expression  aller à l'état 28
    unary_expression    aller à l'état 47


État 26

   27 unary_expression: '!' . unary_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression  aller à l'état 27
    postfix_expression  aller à l'état 28
    unary_expression    aller à l'état 48


État 27

   23 postfix_expression: primary_expression .

    $défaut  réduction par utilisation de la règle 23 (postfix_expression)


État 28

   24 unary_expression: postfix_expression .

    $défaut  réduction par utilisation de la règle 24 (unary_expression)


État 29

   29 multiplicative_expression: unary_expression .

    $défaut  réduction par utilisation de la règle 29 (multiplicative_expression)


État 30

   30 multiplicative_expression: multiplicative_expression . '*' unary_expression
   31                          | multiplicative_expression . '/' unary_expression
   32 additive_expression: multiplicative_expression .

    '*'  décalage et aller à l'état 49
    '/'  décalage et aller à l'état 50

    $défaut  réduction par utilisation de la règle 32 (additive_expression)


État 31

   33 additive_expression: additive_expression . '+' multiplicative_expression
   34                    | additive_expression . '-' multiplicative_expression
   35 relational_expression: additive_expression .

    '+'  décalage et aller à l'état 51
    '-'  décalage et aller à l'état 52

    $défaut  réduction par utilisation de la règle 35 (relational_expression)


État 32

   36 relational_expression: relational_expression . '<' additive_expression
   37                      | relational_expression . '>' additive_expression
   38                      | relational_expression . LTEQ additive_expression
   39                      | relational_expression . GTEQ additive_expression
   40 equality_expression: relational_expression .

    GTEQ  décalage et aller à l'état 53
    LTEQ  décalage et aller à l'état 54
    '<'   décalage et aller à l'état 55
    '>'   décalage et aller à l'état 56

    $défaut  réduction par utilisation de la règle 40 (equality_expression)


État 33

   41 equality_expression: equality_expression . EQUAL relational_expression
   42                    | equality_expression . NOT_EQUAL relational_expression
   43 logical_and_expression: equality_expression .

    EQUAL      décalage et aller à l'état 57
    NOT_EQUAL  décalage et aller à l'état 58

    $défaut  réduction par utilisation de la règle 43 (logical_and_expression)


État 34

   44 logical_and_expression: logical_and_expression . LOGAND equality_expression
   45 logical_or_expression: logical_and_expression .

    LOGAND  décalage et aller à l'état 59

    $défaut  réduction par utilisation de la règle 45 (logical_or_expression)


État 35

   46 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   47 logical_xor_expression: logical_or_expression .

    LOGOR  décalage et aller à l'état 60

    $défaut  réduction par utilisation de la règle 47 (logical_xor_expression)


État 36

   48 logical_xor_expression: logical_xor_expression . LOGXOR logical_or_expression
   49                       | logical_xor_expression . '^' logical_or_expression
   50 conditional_expression: logical_xor_expression .
   51                       | logical_xor_expression . '?' expression ':' conditional_expression

    LOGXOR  décalage et aller à l'état 61
    '^'     décalage et aller à l'état 62
    '?'     décalage et aller à l'état 63

    $défaut  réduction par utilisation de la règle 50 (conditional_expression)


État 37

   52 expression: conditional_expression .

    $défaut  réduction par utilisation de la règle 52 (expression)


État 38

   18 var_decl: VARIABLE '=' expression . ';'

    ';'  décalage et aller à l'état 64


État 39

    7 runconfig_decl: SYMBOL '=' expression . ';'

    ';'  décalage et aller à l'état 65


État 40

    8 node_attr_decl: SYMBOL '.' SYMBOL . '=' expression ';'

    '='  décalage et aller à l'état 66


État 41

   10 symbol_istate_list: '[' symbol_list ']' .

    $défaut  réduction par utilisation de la règle 10 (symbol_istate_list)


État 42

   12 symbol_list: symbol_list ',' . SYMBOL

    SYMBOL  décalage et aller à l'état 67


État 43

    9 node_attr_decl: symbol_istate_list '.' SYMBOL . '=' istate_expression_list ';'

    '='  décalage et aller à l'état 68


État 44

   28 unary_expression: LOGNOT unary_expression .

    $défaut  réduction par utilisation de la règle 28 (unary_expression)


État 45

   22 primary_expression: '(' expression . ')'

    ')'  décalage et aller à l'état 69


État 46

   25 unary_expression: '+' unary_expression .

    $défaut  réduction par utilisation de la règle 25 (unary_expression)


État 47

   26 unary_expression: '-' unary_expression .

    $défaut  réduction par utilisation de la règle 26 (unary_expression)


État 48

   27 unary_expression: '!' unary_expression .

    $défaut  réduction par utilisation de la règle 27 (unary_expression)


État 49

   30 multiplicative_expression: multiplicative_expression '*' . unary_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression  aller à l'état 27
    postfix_expression  aller à l'état 28
    unary_expression    aller à l'état 70


État 50

   31 multiplicative_expression: multiplicative_expression '/' . unary_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression  aller à l'état 27
    postfix_expression  aller à l'état 28
    unary_expression    aller à l'état 71


État 51

   33 additive_expression: additive_expression '+' . multiplicative_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 72


État 52

   34 additive_expression: additive_expression '-' . multiplicative_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 73


État 53

   39 relational_expression: relational_expression GTEQ . additive_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 74


État 54

   38 relational_expression: relational_expression LTEQ . additive_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 75


État 55

   36 relational_expression: relational_expression '<' . additive_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 76


État 56

   37 relational_expression: relational_expression '>' . additive_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 77


État 57

   41 equality_expression: equality_expression EQUAL . relational_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 78


État 58

   42 equality_expression: equality_expression NOT_EQUAL . relational_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 79


État 59

   44 logical_and_expression: logical_and_expression LOGAND . equality_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 32
    equality_expression        aller à l'état 80


État 60

   46 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 32
    equality_expression        aller à l'état 33
    logical_and_expression     aller à l'état 81


État 61

   48 logical_xor_expression: logical_xor_expression LOGXOR . logical_or_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 32
    equality_expression        aller à l'état 33
    logical_and_expression     aller à l'état 34
    logical_or_expression      aller à l'état 82


État 62

   49 logical_xor_expression: logical_xor_expression '^' . logical_or_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 32
    equality_expression        aller à l'état 33
    logical_and_expression     aller à l'état 34
    logical_or_expression      aller à l'état 83


État 63

   51 conditional_expression: logical_xor_expression '?' . expression ':' conditional_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 32
    equality_expression        aller à l'état 33
    logical_and_expression     aller à l'état 34
    logical_or_expression      aller à l'état 35
    logical_xor_expression     aller à l'état 36
    conditional_expression     aller à l'état 37
    expression                 aller à l'état 84


État 64

   18 var_decl: VARIABLE '=' expression ';' .

    $défaut  réduction par utilisation de la règle 18 (var_decl)


État 65

    7 runconfig_decl: SYMBOL '=' expression ';' .

    $défaut  réduction par utilisation de la règle 7 (runconfig_decl)


État 66

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' . expression ';'

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 32
    equality_expression        aller à l'état 33
    logical_and_expression     aller à l'état 34
    logical_or_expression      aller à l'état 35
    logical_xor_expression     aller à l'état 36
    conditional_expression     aller à l'état 37
    expression                 aller à l'état 85


État 67

   12 symbol_list: symbol_list ',' SYMBOL .

    $défaut  réduction par utilisation de la règle 12 (symbol_list)


État 68

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' . istate_expression_list ';'

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    '('       décalage et aller à l'état 23

    istate_expression_list  aller à l'état 86
    istate_expression       aller à l'état 87
    primary_expression      aller à l'état 88


État 69

   22 primary_expression: '(' expression ')' .

    $défaut  réduction par utilisation de la règle 22 (primary_expression)


État 70

   30 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $défaut  réduction par utilisation de la règle 30 (multiplicative_expression)


État 71

   31 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $défaut  réduction par utilisation de la règle 31 (multiplicative_expression)


État 72

   30 multiplicative_expression: multiplicative_expression . '*' unary_expression
   31                          | multiplicative_expression . '/' unary_expression
   33 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  décalage et aller à l'état 49
    '/'  décalage et aller à l'état 50

    $défaut  réduction par utilisation de la règle 33 (additive_expression)


État 73

   30 multiplicative_expression: multiplicative_expression . '*' unary_expression
   31                          | multiplicative_expression . '/' unary_expression
   34 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  décalage et aller à l'état 49
    '/'  décalage et aller à l'état 50

    $défaut  réduction par utilisation de la règle 34 (additive_expression)


État 74

   33 additive_expression: additive_expression . '+' multiplicative_expression
   34                    | additive_expression . '-' multiplicative_expression
   39 relational_expression: relational_expression GTEQ additive_expression .

    '+'  décalage et aller à l'état 51
    '-'  décalage et aller à l'état 52

    $défaut  réduction par utilisation de la règle 39 (relational_expression)


État 75

   33 additive_expression: additive_expression . '+' multiplicative_expression
   34                    | additive_expression . '-' multiplicative_expression
   38 relational_expression: relational_expression LTEQ additive_expression .

    '+'  décalage et aller à l'état 51
    '-'  décalage et aller à l'état 52

    $défaut  réduction par utilisation de la règle 38 (relational_expression)


État 76

   33 additive_expression: additive_expression . '+' multiplicative_expression
   34                    | additive_expression . '-' multiplicative_expression
   36 relational_expression: relational_expression '<' additive_expression .

    '+'  décalage et aller à l'état 51
    '-'  décalage et aller à l'état 52

    $défaut  réduction par utilisation de la règle 36 (relational_expression)


État 77

   33 additive_expression: additive_expression . '+' multiplicative_expression
   34                    | additive_expression . '-' multiplicative_expression
   37 relational_expression: relational_expression '>' additive_expression .

    '+'  décalage et aller à l'état 51
    '-'  décalage et aller à l'état 52

    $défaut  réduction par utilisation de la règle 37 (relational_expression)


État 78

   36 relational_expression: relational_expression . '<' additive_expression
   37                      | relational_expression . '>' additive_expression
   38                      | relational_expression . LTEQ additive_expression
   39                      | relational_expression . GTEQ additive_expression
   41 equality_expression: equality_expression EQUAL relational_expression .

    GTEQ  décalage et aller à l'état 53
    LTEQ  décalage et aller à l'état 54
    '<'   décalage et aller à l'état 55
    '>'   décalage et aller à l'état 56

    $défaut  réduction par utilisation de la règle 41 (equality_expression)


État 79

   36 relational_expression: relational_expression . '<' additive_expression
   37                      | relational_expression . '>' additive_expression
   38                      | relational_expression . LTEQ additive_expression
   39                      | relational_expression . GTEQ additive_expression
   42 equality_expression: equality_expression NOT_EQUAL relational_expression .

    GTEQ  décalage et aller à l'état 53
    LTEQ  décalage et aller à l'état 54
    '<'   décalage et aller à l'état 55
    '>'   décalage et aller à l'état 56

    $défaut  réduction par utilisation de la règle 42 (equality_expression)


État 80

   41 equality_expression: equality_expression . EQUAL relational_expression
   42                    | equality_expression . NOT_EQUAL relational_expression
   44 logical_and_expression: logical_and_expression LOGAND equality_expression .

    EQUAL      décalage et aller à l'état 57
    NOT_EQUAL  décalage et aller à l'état 58

    $défaut  réduction par utilisation de la règle 44 (logical_and_expression)


État 81

   44 logical_and_expression: logical_and_expression . LOGAND equality_expression
   46 logical_or_expression: logical_or_expression LOGOR logical_and_expression .

    LOGAND  décalage et aller à l'état 59

    $défaut  réduction par utilisation de la règle 46 (logical_or_expression)


État 82

   46 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   48 logical_xor_expression: logical_xor_expression LOGXOR logical_or_expression .

    LOGOR  décalage et aller à l'état 60

    $défaut  réduction par utilisation de la règle 48 (logical_xor_expression)


État 83

   46 logical_or_expression: logical_or_expression . LOGOR logical_and_expression
   49 logical_xor_expression: logical_xor_expression '^' logical_or_expression .

    LOGOR  décalage et aller à l'état 60

    $défaut  réduction par utilisation de la règle 49 (logical_xor_expression)


État 84

   51 conditional_expression: logical_xor_expression '?' expression . ':' conditional_expression

    ':'  décalage et aller à l'état 89


État 85

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression . ';'

    ';'  décalage et aller à l'état 90


État 86

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' istate_expression_list . ';'
   14 istate_expression_list: istate_expression_list . ',' istate_expression

    ';'  décalage et aller à l'état 91
    ','  décalage et aller à l'état 92


État 87

   13 istate_expression_list: istate_expression .

    $défaut  réduction par utilisation de la règle 13 (istate_expression_list)


État 88

   15 istate_expression: primary_expression . '[' expression_list ']'

    '['  décalage et aller à l'état 93


État 89

   51 conditional_expression: logical_xor_expression '?' expression ':' . conditional_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    LOGNOT    décalage et aller à l'état 22
    '('       décalage et aller à l'état 23
    '+'       décalage et aller à l'état 24
    '-'       décalage et aller à l'état 25
    '!'       décalage et aller à l'état 26

    primary_expression         aller à l'état 27
    postfix_expression         aller à l'état 28
    unary_expression           aller à l'état 29
    multiplicative_expression  aller à l'état 30
    additive_expression        aller à l'état 31
    relational_expression      aller à l'état 32
    equality_expression        aller à l'état 33
    logical_and_expression     aller à l'état 34
    logical_or_expression      aller à l'état 35
    logical_xor_expression     aller à l'état 36
    conditional_expression     aller à l'état 94


État 90

    8 node_attr_decl: SYMBOL '.' SYMBOL '=' expression ';' .

    $défaut  réduction par utilisation de la règle 8 (node_attr_decl)


État 91

    9 node_attr_decl: symbol_istate_list '.' SYMBOL '=' istate_expression_list ';' .

    $défaut  réduction par utilisation de la règle 9 (node_attr_decl)


État 92

   14 istate_expression_list: istate_expression_list ',' . istate_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    '('       décalage et aller à l'état 23

    istate_expression   aller à l'état 95
    primary_expression  aller à l'état 88


État 93

   15 istate_expression: primary_expression '[' . expression_list ']'

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    '('       décalage et aller à l'état 23

    expression_list     aller à l'état 96
    primary_expression  aller à l'état 97


État 94

   51 conditional_expression: logical_xor_expression '?' expression ':' conditional_expression .

    $défaut  réduction par utilisation de la règle 51 (conditional_expression)


État 95

   14 istate_expression_list: istate_expression_list ',' istate_expression .

    $défaut  réduction par utilisation de la règle 14 (istate_expression_list)


État 96

   15 istate_expression: primary_expression '[' expression_list . ']'
   17 expression_list: expression_list . ',' primary_expression

    ']'  décalage et aller à l'état 98
    ','  décalage et aller à l'état 99


État 97

   16 expression_list: primary_expression .

    $défaut  réduction par utilisation de la règle 16 (expression_list)


État 98

   15 istate_expression: primary_expression '[' expression_list ']' .

    $défaut  réduction par utilisation de la règle 15 (istate_expression)


État 99

   17 expression_list: expression_list ',' . primary_expression

    VARIABLE  décalage et aller à l'état 19
    DOUBLE    décalage et aller à l'état 20
    INTEGER   décalage et aller à l'état 21
    '('       décalage et aller à l'état 23

    primary_expression  aller à l'état 100


État 100

   17 expression_list: expression_list ',' primary_expression .

    $défaut  réduction par utilisation de la règle 17 (expression_list)
